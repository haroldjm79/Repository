{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.18", "generated_at": "2024-11-08T03:16:18.592599Z", "invocation_id": "1d0e732f-ddba-4f03-9123-93c348ce410a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:44.714081Z", "completed_at": "2024-11-08T03:15:44.789091Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:44.789091Z", "completed_at": "2024-11-08T03:15:47.188801Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.6442677974700928, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a3-0102-2dcc-0006-b1e60003ffd2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dfb_data.dim_dfb_nfl_data", "compiled": true, "compiled_code": "\nWITH  __dbt__cte__src_dfb_nfl_data as (\nWith A as (\r\nselect \r\nDate\r\n,Name\r\n,ID as Player_ID\r\n,ROSTER_POSITION as Position\r\n,Salary\r\n,Concat('$',SALARY) as Salary_Char\r\n,GAME_INFO\r\n,OVER_UNDER\r\n,PPG\r\n,Value\r\n,Projection\r\nfrom dfb.raw_dfb_nfl_data\r\n)select * from A\n), A AS (\n SELECT\n md5(cast(coalesce(cast(date as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(name as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(game_info as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as record_id\n, *\n FROM\n __dbt__cte__src_dfb_nfl_data\n)\nSelect\nrecord_id \n,Date\n,Name\n,Position\n,Salary\n,Salary_Char\n,GAME_INFO\n,OVER_UNDER  \n,PPG\n,Value\n,Projection\nfrom A\nwhere PPG > 1", "relation_name": "storage.dfb.dim_dfb_nfl_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:47.373644Z", "completed_at": "2024-11-08T03:15:47.392162Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:47.398174Z", "completed_at": "2024-11-08T03:15:49.051753Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.983780860900879, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a3-0102-2dc2-0006-b1e60004049e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dfb_data.stg_dfb_data", "compiled": true, "compiled_code": "with  __dbt__cte__src_dfb_nfl_data as (\nWith A as (\r\nselect \r\nDate\r\n,Name\r\n,ID as Player_ID\r\n,ROSTER_POSITION as Position\r\n,Salary\r\n,Concat('$',SALARY) as Salary_Char\r\n,GAME_INFO\r\n,OVER_UNDER\r\n,PPG\r\n,Value\r\n,Projection\r\nfrom dfb.raw_dfb_nfl_data\r\n)select * from A\n), source as (\n    select * from __dbt__cte__src_dfb_nfl_data\n\n)\n\n    select *\n    from source", "relation_name": "storage.dfb.stg_dfb_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:49.378102Z", "completed_at": "2024-11-08T03:15:49.378102Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:49.381484Z", "completed_at": "2024-11-08T03:15:54.155146Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.222658157348633, "adapter_response": {"_message": "INSERT 31", "code": "INSERT", "rows_affected": 31}, "message": "INSERT 31", "failures": null, "unique_id": "seed.dfb_data.seed_nfl_teams", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:54.611493Z", "completed_at": "2024-11-08T03:15:54.730281Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:54.734808Z", "completed_at": "2024-11-08T03:15:56.802532Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.669578790664673, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a3-0102-2dcc-0006-b1e60003ffea"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.accepted_values_dim_dfb_nfl_data_position__QB__RB__WR__TE__WR_FLEX__RB_FLEX__TE_FLEX__DST.1038289b56", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        position as value_field,\n        count(*) as n_records\n\n    from storage.dfb.dim_dfb_nfl_data\n    group by position\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'QB','RB','WR','TE','WR/FLEX','RB/FLEX','TE/FLEX','DST'\n)\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:57.274041Z", "completed_at": "2024-11-08T03:15:58.873905Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:58.873905Z", "completed_at": "2024-11-08T03:15:59.393060Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4184205532073975, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a3-0102-2dc2-0006-b1e6000404a6"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.no_nulls_in_dim_dfb", "compiled": true, "compiled_code": "\n SELECT * FROM storage.dfb.dim_dfb_nfl_data WHERE\n RECORD_ID IS NULL OR\n DATE IS NULL OR\n NAME IS NULL OR\n POSITION IS NULL OR\n SALARY IS NULL OR\n SALARY_CHAR IS NULL OR\n GAME_INFO IS NULL OR\n OVER_UNDER IS NULL OR\n PPG IS NULL OR\n VALUE IS NULL OR\n PROJECTION IS NULL OR\n \n FALSE\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:15:59.715095Z", "completed_at": "2024-11-08T03:15:59.764659Z"}, {"name": "execute", "started_at": "2024-11-08T03:15:59.766080Z", "completed_at": "2024-11-08T03:16:01.427095Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.177367925643921, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dc2-0006-b1e6000404aa"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.not_null_dim_dfb_nfl_data_date.6300d22d3c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date\nfrom storage.dfb.dim_dfb_nfl_data\nwhere date is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:16:01.894545Z", "completed_at": "2024-11-08T03:16:01.979018Z"}, {"name": "execute", "started_at": "2024-11-08T03:16:01.986581Z", "completed_at": "2024-11-08T03:16:03.426202Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.777578592300415, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dc2-0006-b1e6000404ae"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.not_null_dim_dfb_nfl_data_name.ecb11b32f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect name\nfrom storage.dfb.dim_dfb_nfl_data\nwhere name is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:16:03.694294Z", "completed_at": "2024-11-08T03:16:03.710020Z"}, {"name": "execute", "started_at": "2024-11-08T03:16:03.710020Z", "completed_at": "2024-11-08T03:16:05.862037Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.648325204849243, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dcc-0006-b1e60003fff2"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.positive_value_in dfb", "compiled": true, "compiled_code": "\nSELECT\n *\nFROM\n storage.dfb.dim_dfb_nfl_data\nWHERE\n PPG < 0\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-11-08T03:16:06.373257Z", "completed_at": "2024-11-08T03:16:06.397274Z"}, {"name": "execute", "started_at": "2024-11-08T03:16:06.397274Z", "completed_at": "2024-11-08T03:16:08.142740Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.1618409156799316, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dc2-0006-b1e6000404b2"}, "message": null, "failures": 0, "unique_id": "test.dfb_data.t_ppg_value", "compiled": true, "compiled_code": "\nSELECT\n *\nFROM\n storage.dfb.dim_dfb_nfl_data\nWHERE\n PPG > 100\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-08T03:16:08.543468Z", "completed_at": "2024-11-08T03:16:08.645412Z"}, {"name": "execute", "started_at": "2024-11-08T03:16:08.654432Z", "completed_at": "2024-11-08T03:16:16.207849Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 7.87390661239624, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dc2-0006-b1e6000404b6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dfb_data.py_nfl_data", "compiled": true, "compiled_code": "import snowflake.snowpark.functions as F\r\n\r\ndef model(dbt, session):\r\n    data_df = dbt.ref('stg_dfb_data')\r\n    data_df = data_df.drop('PLAYER_ID')\r\n    data_df = data_df.filter(data_df['PPG'] > 1)\r\n    return data_df\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"stg_dfb_data\": \"storage.dfb.stg_dfb_data\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"storage\"\n    schema = \"dfb\"\n    identifier = \"py_nfl_data\"\n    \n    def __repr__(self):\n        return 'storage.dfb.py_nfl_data'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n# To run this in snowsight, you need to select entry point to be main\n# And you may have to modify the return type to text to get the result back\n# def main(session):\n#     dbt = dbtObj(session.table)\n#     df = model(dbt, session)\n#     return df.collect()\n\n# to run this in local notebook, you need to create a session following examples https://github.com/Snowflake-Labs/sfguide-getting-started-snowpark-python\n# then you can do the following to run model\n# dbt = dbtObj(session.table)\n# df = model(dbt, session)\n\n", "relation_name": "storage.dfb.py_nfl_data"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-11-08T03:16:16.431453Z", "completed_at": "2024-11-08T03:16:16.443292Z"}, {"name": "execute", "started_at": "2024-11-08T03:16:16.443292Z", "completed_at": "2024-11-08T03:16:17.841712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.1368844509124756, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b839a4-0102-2dc2-0006-b1e6000404ca"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.dfb_data.stg_nfl_teams", "compiled": true, "compiled_code": "with source as (\nselect * from storage.dfb.seed_nfl_teams\n)select * from source", "relation_name": "storage.dfb.stg_nfl_teams"}], "elapsed_time": 39.43819284439087, "args": {"partial_parse": true, "static_parser": true, "which": "build", "include_saved_query": false, "project_dir": "C:\\Users\\harol\\Documents\\GitHub\\Repository\\dbt_dailyfantasybuzz\\dfb_data", "favor_state": false, "log_level_file": "debug", "print": true, "populate_cache": true, "vars": {}, "target_path": "target\\dbtlearn_dbt_assets-79f06fa-7d2898a", "enable_legacy_logger": false, "cache_selected_only": false, "show": false, "invocation_command": "dbt build --select fqn:dfb_data.seed_nfl_teams fqn:dfb_data.staging.stg_dfb_data fqn:dfb_data.staging.stg_nfl_teams fqn:dfb_data.dim.py_nfl_data fqn:dfb_data.dim.dim_dfb_nfl_data", "indirect_selection": "eager", "strict_mode": false, "use_colors_file": true, "introspect": true, "exclude": [], "log_format": "json", "write_json": true, "partial_parse_file_diff": true, "defer": false, "profiles_dir": "C:\\Users\\harol\\.dbt", "log_file_max_bytes": 10485760, "select": ["fqn:dfb_data.seed_nfl_teams", "fqn:dfb_data.staging.stg_dfb_data", "fqn:dfb_data.staging.stg_nfl_teams", "fqn:dfb_data.dim.py_nfl_data", "fqn:dfb_data.dim.dim_dfb_nfl_data"], "log_path": "C:\\Users\\harol\\Documents\\GitHub\\Repository\\dbt_dailyfantasybuzz\\dfb_data\\target\\dbtlearn_dbt_assets-79f06fa-7d2898a", "log_format_file": "json", "macro_debugging": false, "log_level": "info", "warn_error_options": {"include": [], "exclude": []}, "version_check": true, "show_resource_report": false, "resource_types": [], "send_anonymous_usage_stats": false, "require_explicit_package_overrides_for_builtin_materializations": false, "use_colors": true, "printer_width": 80, "quiet": false}}